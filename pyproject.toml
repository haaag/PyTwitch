[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[project]
name = "pytwitch"
description = "Simple menu tool for launching Twitch streams."
readme = "README.md"
keywords = ["cli", "dmenu", "rofi", "twitch", "utility"]
license = { file = "LICENSE.txt" }
authors = [{ name = "haaag", email = "git.haaag@gmail.com" }]
requires-python = ">=3.8"
dynamic = ["version"]
dependencies = [
  "pyselector==0.0.38",
  "httpx==0.23.3",
  "python-dotenv",
  "mpv==1.0.7",
  "pydantic==2.7.4",
  "tenacity==8.4.2",
  "PyYAML==6.0.1",
]

[tool.hatch.build.targets.wheel]
packages = ["src/twitch"]

[project.scripts]
pytwitch = "twitch.__main__:main"

[tool.hatch.version]
path = "src/twitch/__about__.py"

[tool.pytest.ini_options]
pythonpath = "src"
testpaths = ["tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.mypy]
hide_error_codes = false
show_error_code_links = true
enable_error_code = ["ignore-without-code"]
show_error_context = true
show_column_numbers = true
ignore_missing_imports = true
pretty = true
warn_no_return = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "yaml.*"
ignore_missing_imports = true

[tool.ruff]
fix = false
line-length = 120
show-fixes = true
target-version = "py37"
exclude = [".venv", ".mypy_cache", ".pytest_cache"]

[tool.ruff.format]
quote-style = "single"
line-ending = "auto"
skip-magic-trailing-comma = false
docstring-code-format = true

[tool.ruff.lint.pylint]
max-args = 7

[tool.ruff.lint]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
task-tags = ["HACK", "FIX", "BUG"]
select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  # "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
extend-select = [
  "B",   # (flake8-bugbear)
  "BLE", # (flake8-blind-except)
  "C4",  # (flake8-comprehensions)
  # "ERA",  # (eradicate)
  "I",   # (isort)
  "ICN", # (flake8-import-conventions)
  "INP", # (flake8-no-pep420)
  "N",   # (pep8-naming)
  "NPY", # (numpy-specific-rules)
  "PGH", # (pygrep-hooks)
  "PIE", # (flake8-pie)
  "PTH", # (flake8-use-pathlib)
  # "Q",   # (flake8-quotes)
  "RET", # (flake8-return)
  "RSE", # (flake8-raise)
  "RUF", # (ruff-specific-rules)
  "S",   # (flake8-bandit)
  "SIM", # (flake8-simplify)
  "T20", # (flake8-print)
  "TCH", # (flake8-type-checking)
  "TID", # (flake8-tidy-imports)
  "YTT", # (flake8-2020)
]
ignore = ["Q000", "Q003", "FBT001", "FBT002", "ARG002", "FBT003"]

[tool.ruff.lint.isort]
force-single-line = true
order-by-type = true
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"src/twitch/player.py" = ["S603", "A001"]
"src/twitch/__about__.py" = ["I002"]
"src/twitch/setup.py" = ["T201"]
"src/twitch/app.py" = ["FBT003"]
"tests/**/*" = [
  "S101",   # use of `assert` detected
  "ARG002", # unused-method-argument
  "Q000",   # single-quote preferred
  "FBT001", # boolean-type-hint-positional-argument
  "FBT002", # boolean-default-value-positional-argument
  "A003",   # builtin-attribute-shadowing
]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"
